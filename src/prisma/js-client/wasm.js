/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", {value: true});

const {
    Decimal,
    objectEnumValues,
    makeStrictEnum,
    Public,
    getRuntime,
    skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
    client: "6.12.0",
    engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
};
Prisma.PrismaClientUnknownRequestError = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.PrismaClientRustPanicError = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.PrismaClientInitializationError = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.PrismaClientValidationError = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.empty = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.join = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.raw = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.validator = Public.validator

/**
 * Extensions
 */
Prisma.getExtensionContext = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}
Prisma.defineExtension = () => {
    const runtimeName = getRuntime().prettyName;
    throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
    )
}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
    DbNull: objectEnumValues.classes.DbNull,
    JsonNull: objectEnumValues.classes.JsonNull,
    AnyNull: objectEnumValues.classes.AnyNull
}


/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
    notes: 'notes',
    id: 'id',
    created_at: 'created_at'
};

exports.Prisma.EventLogScalarFieldEnum = {
    event_log_id: 'event_log_id',
    created_at: 'created_at',
    event: 'event',
    created_by_user_id: 'created_by_user_id',
    language: 'language',
    location: 'location',
    user_agent: 'user_agent',
    client_ip: 'client_ip',
    event_payload: 'event_payload',
    event_type: 'event_type'
};

exports.Prisma.AccountScalarFieldEnum = {
    account_id: 'account_id',
    created_at: 'created_at',
    created_by_user_id: 'created_by_user_id',
    display_name: 'display_name',
    pricing_plan: 'pricing_plan',
    payment_status: 'payment_status',
    account_status: 'account_status',
    account_expiration_date: 'account_expiration_date',
    upcoming_payment_date: 'upcoming_payment_date'
};

exports.Prisma.GalleryConfigScalarFieldEnum = {
    gallery_config_id: 'gallery_config_id',
    created_at: 'created_at',
    created_by_account_id: 'created_by_account_id',
    records_traits: 'records_traits',
    records_color_traits: 'records_color_traits'
};

exports.Prisma.GalleryRecordScalarFieldEnum = {
    gallery_record_id: 'gallery_record_id',
    created_at: 'created_at',
    created_by_account_id: 'created_by_account_id',
    asset_url: 'asset_url',
    asset_traits: 'asset_traits',
    asset_color_traits: 'asset_color_traits'
};

exports.Prisma.SessionScalarFieldEnum = {
    session_id: 'session_id',
    created_at: 'created_at',
    created_by_user_id: 'created_by_user_id',
    session_mode: 'session_mode',
    location: 'location',
    language: 'language',
    user_agent: 'user_agent',
    last_used: 'last_used',
    client_ip: 'client_ip',
    expires_at: 'expires_at'
};

exports.Prisma.DeletedUserScalarFieldEnum = {
    user_id: 'user_id',
    created_at: 'created_at',
    body: 'body'
};

exports.Prisma.UserScalarFieldEnum = {
    user_id: 'user_id',
    email: 'email',
    display_name: 'display_name',
    password: 'password',
    role: 'role',
    created_at: 'created_at',
    permissions: 'permissions',
    is_active: 'is_active'
};

exports.Prisma.SortOrder = {
    asc: 'asc',
    desc: 'desc'
};

exports.Prisma.QueryMode = {
    default: 'default',
    insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
    first: 'first',
    last: 'last'
};


exports.Prisma.ModelName = {
    Admin: 'Admin',
    EventLog: 'EventLog',
    Account: 'Account',
    GalleryConfig: 'GalleryConfig',
    GalleryRecord: 'GalleryRecord',
    Session: 'Session',
    DeletedUser: 'DeletedUser',
    User: 'User'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
    constructor() {
        return new Proxy(this, {
            get(target, prop) {
                let message
                const runtime = getRuntime()
                if (runtime.isEdge) {
                    message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
                } else {
                    message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
                }

                message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

                throw new Error(message)
            }
        })
    }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
